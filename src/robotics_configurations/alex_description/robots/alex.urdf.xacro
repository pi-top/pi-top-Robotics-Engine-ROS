<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="alex">

    <material name="grey">
        <color rgba="0.75 0.75 0.75 1.0"/>
    </material>

    <material name="red">
        <color rgba="0.8 0 0 1"/>
    </material>

    <material name="black">
        <color rgba="1.0 1.0 1.0 1"/>
    </material>

    <material name="pi-top_green">
        <color rgba="0 0.7 0.64 1"/>
    </material>

    <!-- Gazebo parameters -->
    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
            <legacyMode>false</legacyMode>
            <alwaysOn>true</alwaysOn>
            <updateRate>20</updateRate>
            <leftJoint>baselink_left_wheel_joint</leftJoint>
            <rightJoint>baselink_right_wheel_joint</rightJoint>
            <wheelSeparation>0.175</wheelSeparation>
            <wheelDiameter>0.075</wheelDiameter>
            <torque>0.01</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>

        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/alex</robotNamespace>
        </plugin>
    </gazebo>


    <!-- Chassis Properties -->
    <xacro:property name="chassis_mesh_path"
                    value="model://alex/meshes/chassis_asm.dae"/>
    <xacro:property name="chassis_mass" value="0.650"/>
    <xacro:property name="chassis_width_x" value="0.192"/>
    <xacro:property name="chassis_depth_y" value="0.059"/>
    <xacro:property name="chassis_height_z" value="0.276"/>
    <xacro:property name="chassis_ixx" value="${(chassis_mass / 12.0) * (chassis_depth_y**2 + chassis_height_z**2)}"/>
    <xacro:property name="chassis_iyy" value="${(chassis_mass / 12.0) * (chassis_width_x**2 + chassis_height_z**2)}"/>
    <xacro:property name="chassis_izz" value="${(chassis_mass / 12.0) * (chassis_width_x**2 + chassis_depth_y**2)}"/>

    <xacro:property name="chassis_origin_z_offset" value="0.017475"/>

    <xacro:macro name="chassis_origin">
        <origin xyz="0 ${-chassis_depth_y/2 - chassis_origin_z_offset} 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="chassis_joint_origin">
        <origin xyz="-0.068 0 0.056475" rpy="${pi/2} 0 ${-pi/2}"/>
    </xacro:macro>

    <!-- * * * * * * * * * -->

    <!-- Expansion Plate Properties -->
    <xacro:property name="ep_mesh_path"
                    value="model://alex/meshes/EP_asm.dae"/>
    <xacro:property name="ep_mass" value="0.05"/>
    <xacro:property name="ep_width_x" value="0.1015"/>
    <xacro:property name="ep_depth_y" value="0.018"/>
    <xacro:property name="ep_height_z" value="0.134"/>
    <xacro:property name="ep_ixx" value="${(ep_mass / 12.0) * (ep_depth_y**2 + ep_height_z**2)}"/>
    <xacro:property name="ep_iyy" value="${(ep_mass / 12.0) * (ep_width_x**2 + ep_height_z**2)}"/>
    <xacro:property name="ep_izz" value="${(ep_mass / 12.0) * (ep_width_x**2 + ep_depth_y**2)}"/>

    <xacro:property name="ep_origin_y_offset" value="0.0085"/>

    <xacro:macro name="ep_box_origin">
        <origin xyz="0 -${ep_origin_y_offset} 0" rpy="0 0 0"/>
    </xacro:macro>

    <!-- * * * * * * * * * -->

    <!-- pi-top [4] Properties -->
    <xacro:property name="pt4_mesh_path"
                    value="model://alex/meshes/4_asm_2.dae"/>
    <xacro:property name="pt4_mass" value="0.390"/>
    <xacro:property name="pt4_width_x" value="0.0995"/>
    <xacro:property name="pt4_depth_y" value="0.034"/>
    <xacro:property name="pt4_height_z" value="0.132"/>
    <xacro:property name="pt4_ixx" value="${(pt4_mass / 12.0) * (pt4_depth_y**2 + pt4_height_z**2)}"/>
    <xacro:property name="pt4_iyy" value="${(pt4_mass / 12.0) * (pt4_width_x**2 + pt4_height_z**2)}"/>
    <xacro:property name="pt4_izz" value="${(pt4_mass / 12.0) * (pt4_width_x**2 + pt4_depth_y**2)}"/>

    <xacro:macro name="pt4_box_origin">
        <origin xyz="0 ${pt4_depth_y/2} 0" rpy="0 0 0"/>
    </xacro:macro>

    <!-- * * * * * * * * * -->

    <!-- Wheel Properties -->
    <xacro:property name="wheel_mesh_path"
                    value="model://alex/meshes/wheel_asm.dae"/>
    <xacro:property name="wheel_mass" value="0.01"/>
    <xacro:property name="wheel_width" value="0.029"/>
    <xacro:property name="wheel_radius" value="0.0375"/>
    <xacro:property name="wheel_ixx" value="${(wheel_mass / 12.0) * (3 * wheel_radius**2 + wheel_width**2)}"/>
    <xacro:property name="wheel_iyy" value="${wheel_ixx}"/>
    <xacro:property name="wheel_izz" value="${(chassis_mass * wheel_radius**2) / 2}"/>

    <xacro:macro name="left_wheel_mesh_origin">
        <origin xyz="0 0 0" rpy="0 ${pi} 0"/>
    </xacro:macro>

    <xacro:macro name="left_wheel_joint_origin">
        <origin xyz="0 0.0805 0" rpy="${-pi/2} 0 0"/>
    </xacro:macro>

    <xacro:macro name="right_wheel_mesh_origin">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="right_wheel_joint_origin">
        <origin xyz="0 -0.0805 0" rpy="${-pi/2} 0 0"/>
    </xacro:macro>

    <xacro:property name="wheel_effort" value="" />
    <xacro:property name="wheel_damping" value="" />
    <xacro:property name="wheel_friction" value="" />
    <xacro:property name="wheel_velocity" value="" />


    <xacro:macro name="gazebo_wheel_params" params="link_ref">
        <gazebo reference="${link_ref}">
            <kp>500.0</kp>
            <kd>500.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
        </gazebo>
    </xacro:macro>
    <!-- * * * * * * * * * -->

    <!-- Castor Properties -->
    <xacro:property name="castor_mesh_path"
                    value="model://alex/meshes/castor_asm_3.dae"/>
    <xacro:property name="castor_mass" value="0.001"/>
    <xacro:property name="castor_height" value="0.025"/>
    <xacro:property name="castor_radius" value="0.0162"/>
    <xacro:property name="castor_ixx" value="${(castor_mass / 12.0) * (3 * castor_radius**2 + castor_height**2)}"/>
    <xacro:property name="castor_iyy" value="${castor_ixx}"/>
    <xacro:property name="castor_izz" value="${(castor_mass * castor_radius**2) / 2}"/>

    <xacro:macro name="castor_mesh_origin">
        <origin xyz="0.08 0 0.058515" rpy="${pi/2} 0 ${-pi/2}"/>
    </xacro:macro>

    <xacro:macro name="castor_collision_origin">
        <origin xyz="0 0 ${-castor_height/2}" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="castor_joint_origin">
        <origin xyz="-0.148 0 -0.00204" rpy="0 0 0"/>
    </xacro:macro>
    <!-- * * * * * * * * * -->

    <!-- Castor Wheel Properties -->
    <xacro:property name="castor_wheel_mass" value="0.001"/>
    <xacro:property name="castor_wheel_width" value="0.0145"/>
    <xacro:property name="castor_wheel_radius" value="0.0125"/>
    <xacro:property name="castor_wheel_ixx" value="${(castor_wheel_mass / 12.0) * (3 * castor_wheel_radius**2 + castor_wheel_width**2)}"/>
    <xacro:property name="castor_wheel_iyy" value="${castor_wheel_ixx}"/>
    <xacro:property name="castor_wheel_izz" value="${(castor_wheel_mass * castor_wheel_radius**2) / 2}"/>

    <xacro:macro name="castor_wheel_joint_origin">
        <origin xyz="-0.016 0 -0.0205" rpy="${-pi/2} 0 0"/>
    </xacro:macro>

    <xacro:macro name="gazebo_castor_wheel_params" params="link_ref">
        <gazebo reference="${link_ref}">
            <kp>1000.0</kp>
            <kd>1000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
        </gazebo>
    </xacro:macro>
    <!-- * * * * * * * * * -->

    <!-- Pan Mechanism Properties -->
    <xacro:property name="pan_mechanism_mesh_path"
                    value="model://alex/meshes/pan_asm_2.dae"/>
    <xacro:property name="pan_mechanism_mass" value="0.005"/>
    <xacro:property name="pan_mechanism_width_x" value="0.016"/>
    <xacro:property name="pan_mechanism_depth_y" value="0.0385"/>
    <xacro:property name="pan_mechanism_height_z" value="0.048"/>
    <xacro:property name="pan_mechanism_ixx" value="${(pan_mechanism_mass / 12.0) * (pan_mechanism_depth_y**2 + pan_mechanism_height_z**2)}"/>
    <xacro:property name="pan_mechanism_iyy" value="${(pan_mechanism_mass / 12.0) * (pan_mechanism_width_x**2 + pan_mechanism_height_z**2)}"/>
    <xacro:property name="pan_mechanism_izz" value="${(pan_mechanism_mass / 12.0) * (pan_mechanism_width_x**2 + pan_mechanism_depth_y**2)}"/>

    <xacro:macro name="pan_mechanism_origin">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="pan_mechanism_joint_origin">
        <origin xyz="0 -0.0372805 -0.142268" rpy="${pi} ${-pi/2} 0"/>
    </xacro:macro>

    <xacro:macro name="servo_params" params="link_ref">
        <gazebo reference="${link_ref}">
            <kp>10000.0</kp>
            <kd>10000.0</kd>
            <mu1>1.0</mu1>
            <mu2>1.0</mu2>
        </gazebo>
    </xacro:macro>
    <!-- * * * * * * * * * -->

    <!-- Tilt Mechanism Properties -->
    <xacro:property name="tilt_mechanism_mesh_path"
                    value="model://alex/meshes/tilt_asm.dae"/>
    <xacro:property name="tilt_mechanism_mass" value="0.005"/>
    <xacro:property name="tilt_mechanism_width_x" value="0.016"/>
    <xacro:property name="tilt_mechanism_depth_y" value="0.0385"/>
    <xacro:property name="tilt_mechanism_height_z" value="0.048"/>
    <xacro:property name="tilt_mechanism_ixx" value="${(tilt_mechanism_mass / 12.0) * (tilt_mechanism_depth_y**2 + tilt_mechanism_height_z**2)}"/>
    <xacro:property name="tilt_mechanism_iyy" value="${(tilt_mechanism_mass / 12.0) * (tilt_mechanism_width_x**2 + tilt_mechanism_height_z**2)}"/>
    <xacro:property name="tilt_mechanism_izz" value="${(tilt_mechanism_mass / 12.0) * (tilt_mechanism_width_x**2 + tilt_mechanism_depth_y**2)}"/>

    <xacro:macro name="tilt_mechanism_origin">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="tilt_mechanism_joint_origin">
        <origin xyz="0 -0.04825 -0.000526152" rpy="${pi/2} 0 ${pi}"/>
    </xacro:macro>
    <!-- * * * * * * * * * -->

    <!-- Camera Module Properties -->
    <xacro:property name="camera_module_mesh_path"
                    value="model://alex/meshes/camera_asm.dae"/>
    <xacro:property name="camera_module_mass" value="0.005"/>
    <xacro:property name="camera_module_width_x" value="0.02375"/>
    <xacro:property name="camera_module_depth_y" value="0.0124"/>
    <xacro:property name="camera_module_height_z" value="0.02375"/>
    <xacro:property name="camera_module_ixx" value="${(camera_module_mass / 12.0) * (camera_module_depth_y**2 + camera_module_height_z**2)}"/>
    <xacro:property name="camera_module_iyy" value="${(camera_module_mass / 12.0) * (camera_module_width_x**2 + camera_module_height_z**2)}"/>
    <xacro:property name="camera_module_izz" value="${(camera_module_mass / 12.0) * (camera_module_width_x**2 + camera_module_depth_y**2)}"/>

    <xacro:property name="camera_module_collision_y_offset" value="-0.0031"/>

    <xacro:macro name="camera_module_box_origin">
        <origin xyz="0 ${camera_module_collision_y_offset} 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="camera_module_joint_origin">
        <origin xyz="0.0176 0.00035 0" rpy="0 0 ${-pi/2}"/>
    </xacro:macro>

    <!-- Camera Sensor Properties -->
    <xacro:macro name="camera_sensor_joint_origin">
        <origin xyz="0 0.0014 0" rpy="${pi} 0 ${pi/2}"/>
    </xacro:macro>

    <xacro:property name="camera_hfov_rad" value="${108*pi/180}"/>

    <gazebo reference="camera_sensor">
        <sensor type="camera" name="camera1">
            <update_rate>30.0</update_rate>
            <camera name="pan_tilt_camera">
                <horizontal_fov>${camera_hfov_rad}</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>alex/camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_sensor</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

<!--    <xacro:macro name="camera_sensor_joint_origin">-->
<!--        <origin xyz="0 0.0014 0" rpy="${-pi/2} ${pi} 0"/>-->
<!--    </xacro:macro>-->




    <!-- * * * * * * * * * -->

    <!-- Generic Macros -->
    <xacro:macro name="x_axis">
        <axis xyz="1 0 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="y_axis">
        <axis xyz="0 1 0" rpy="0 0 0"/>
    </xacro:macro>

    <xacro:macro name="z_axis">
        <axis xyz="0 0 1" rpy="0 0 0"/>
    </xacro:macro>

    <!-- * * * * * * * * * -->

    <!-- Model Definitions -->

    <link name="base_link">
        <pose>0 0 ${wheel_radius} 0 0 0</pose>
    </link>

    <link name="chassis">
        <inertial>
            <xacro:chassis_origin/>
            <mass value="${chassis_mass}"/>
            <inertia ixx="${chassis_ixx}" ixy="0.0" ixz="0.0" iyy="${chassis_iyy}" iyz="0.0" izz="${chassis_izz}"/>
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
<!--                <box size="${chassis_width_x} ${chassis_depth_y} ${chassis_height_z}"/>-->
                <mesh filename="${chassis_mesh_path}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <xacro:chassis_origin/>
            <geometry>
                <box size="${chassis_width_x} ${chassis_depth_y} ${chassis_height_z}"/>
            </geometry>
        </collision>
    </link>

    <joint name="baselink_chassis_joint" type="fixed">
    	<parent link="base_link"/>
    	<child link="chassis"/>
    	<xacro:chassis_joint_origin/>
	</joint>

    <gazebo reference="chassis">
        <kp>10000.0</kp>
        <kd>10000.0</kd>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>

    <link name="ep">
        <inertial>
            <xacro:ep_box_origin/>
            <mass value="${ep_mass}"/>
            <inertia ixx="${ep_ixx}" ixy="0.0" ixz="0.0" iyy="${ep_iyy}" iyz="0.0" izz="${ep_izz}"/>
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${ep_width_x} ${ep_depth_y} ${ep_height_z}"/>
<!--                <mesh filename="${ep_mesh_path}"/>-->
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <xacro:ep_box_origin/>
            <geometry>
                <box size="${ep_width_x} ${ep_depth_y} ${ep_height_z}"/>
            </geometry>
        </collision>
    </link>

    <joint name="chassis_ep_joint" type="fixed">
    	<parent link="chassis"/>
    	<child link="ep"/>
<!--    	<xacro:ep_joint_origin/>-->
	</joint>

    <gazebo reference="ep">
        <kp>10000.0</kp>
        <kd>10000.0</kd>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>

    <link name="pt4">
        <inertial>
            <xacro:pt4_box_origin/>
            <mass value="${pt4_mass}"/>
            <inertia ixx="${pt4_ixx}" ixy="0.0" ixz="0.0" iyy="${pt4_iyy}" iyz="0.0" izz="${pt4_izz}"/>
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${pt4_width_x} ${pt4_depth_y} ${pt4_height_z}"/>
<!--                <mesh filename="${pt4_mesh_path}"/>-->
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <xacro:pt4_box_origin/>
            <geometry>
                <box size="${pt4_width_x} ${pt4_depth_y} ${pt4_height_z}"/>
            </geometry>
        </collision>
    </link>

    <joint name="chassis_pt4_joint" type="fixed">
    	<parent link="chassis"/>
    	<child link="pt4"/>
<!--    	<xacro:pt4_joint_origin/>-->
	</joint>

    <gazebo reference="pt4">
        <kp>10000.0</kp>
        <kd>10000.0</kd>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>

    <link name="right_wheel">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${wheel_mass}"/>
            <inertia ixx="${wheel_ixx}" ixy="0.0" ixz="0.0" iyy="${wheel_iyy}" iyz="0.0" izz="${wheel_izz}"/>
        </inertial>
        <visual>
            <xacro:right_wheel_mesh_origin/>
            <geometry>
                <mesh filename="${wheel_mesh_path}"/>
<!--                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>-->
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>
    </link>

    <joint name="baselink_right_wheel_joint" type="continuous">
    	<parent link="base_link"/>
    	<child link="right_wheel"/>
    	<xacro:right_wheel_joint_origin/>
        <limit effort="0.1" velocity="0.45"/>
        <xacro:z_axis/>
        <joint_properties damping="1.0" friction="1.0"/>
	</joint>

    <link name="left_wheel">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${wheel_mass}"/>
            <inertia ixx="${wheel_ixx}" ixy="0.0" ixz="0.0" iyy="${wheel_iyy}" iyz="0.0" izz="${wheel_izz}"/>
        </inertial>
        <visual>
            <xacro:left_wheel_mesh_origin/>
            <geometry>
                <mesh filename="${wheel_mesh_path}"/>
<!--                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>-->
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>
    </link>

    <joint name="baselink_left_wheel_joint" type="continuous">
    	<parent link="base_link"/>
    	<child link="left_wheel"/>
    	<xacro:left_wheel_joint_origin/>
        <limit effort="0.1" velocity="0.45"/>
        <xacro:z_axis/>
        <joint_properties damping="1.0" friction="1.0"/>
	</joint>

    <link name="castor">
        <inertial>
            <xacro:castor_collision_origin/>
            <mass value="${castor_mass}"/>
            <inertia ixx="${castor_ixx}" ixy="0.0" ixz="0.0" iyy="${castor_iyy}" iyz="0.0" izz="${castor_izz}"/>
        </inertial>
        <visual>
            <xacro:castor_mesh_origin/>
            <geometry>
                <mesh filename="${castor_mesh_path}"/>
            </geometry>
        </visual>
        <collision>
            <xacro:castor_collision_origin/>
            <geometry>
                <cylinder radius="${castor_radius}" length="${castor_height}"/>
            </geometry>
        </collision>
    </link>

    <joint name="baselink_castor_joint" type="continuous">
    	<parent link="base_link"/>
    	<child link="castor"/>
    	<xacro:castor_joint_origin/>
        <limit effort="1.0" velocity="0.45"/>
        <xacro:z_axis/>
        <joint_properties damping="1.0" friction="1.0"/>
	</joint>

    <gazebo reference="castor">
        <kp>10000.0</kp>
        <kd>10000.0</kd>
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
    </gazebo>

    <link name="castor_wheel">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${castor_wheel_mass}"/>
            <inertia ixx="${castor_wheel_ixx}" ixy="0.0" ixz="0.0" iyy="${castor_wheel_iyy}" iyz="0.0" izz="${castor_wheel_izz}"/>
        </inertial>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${castor_wheel_radius}" length="${castor_wheel_width}"/>
            </geometry>
        </collision>
    </link>

    <joint name="castor_castorwheel_joint" type="continuous">
    	<parent link="castor"/>
    	<child link="castor_wheel"/>
    	<xacro:castor_wheel_joint_origin/>
        <limit effort="1.0" velocity="0.45"/>
        <xacro:z_axis/>
        <joint_properties damping="1.0" friction="1.0"/>
	</joint>

    <link name="pan_mechanism">
        <inertial>
            <xacro:pan_mechanism_origin/>
            <mass value="${pan_mechanism_mass}"/>
            <inertia ixx="${pan_mechanism_ixx}" ixy="0.0" ixz="0.0" iyy="${pan_mechanism_iyy}" iyz="0.0" izz="${pan_mechanism_izz}"/>
        </inertial>
        <visual>
<!--            <xacro:pan_mechanism_origin/>-->
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
<!--                <box size="${pan_mechanism_width_x} ${pan_mechanism_depth_y} ${pan_mechanism_height_z}"/>-->
                <mesh filename="${pan_mechanism_mesh_path}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <xacro:pan_mechanism_origin/>
            <geometry>
                <box size="${pan_mechanism_width_x} ${pan_mechanism_depth_y} ${pan_mechanism_height_z}"/>
            </geometry>
        </collision>
    </link>

    <joint name="pan_mechanism_joint" type="revolute">
    	<parent link="chassis"/>
    	<child link="pan_mechanism"/>
    	<xacro:pan_mechanism_joint_origin/>
        <limit lower="${-pi/2}" upper="${pi/2}" effort="1.0" velocity="${100*pi/180}"/>
        <xacro:y_axis/>
        <joint_properties damping="1.0" friction="1.0"/>
	</joint>

    <link name="tilt_mechanism">
        <inertial>
            <xacro:tilt_mechanism_origin/>
            <mass value="${tilt_mechanism_mass}"/>
            <inertia ixx="${tilt_mechanism_ixx}" ixy="0.0" ixz="0.0" iyy="${tilt_mechanism_iyy}" iyz="0.0" izz="${tilt_mechanism_izz}"/>
        </inertial>
        <visual>
<!--            <xacro:tilt_mechanism_origin/>-->
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
<!--                <box size="${tilt_mechanism_width_x} ${tilt_mechanism_depth_y} ${tilt_mechanism_height_z}"/>-->
                <mesh filename="${tilt_mechanism_mesh_path}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <xacro:tilt_mechanism_origin/>
            <geometry>
                <box size="${tilt_mechanism_width_x} ${tilt_mechanism_depth_y} ${tilt_mechanism_height_z}"/>
            </geometry>
        </collision>
    </link>

    <joint name="tilt_mechanism_joint" type="revolute">
    	<parent link="pan_mechanism"/>
    	<child link="tilt_mechanism"/>
    	<xacro:tilt_mechanism_joint_origin/>
        <limit lower="${-pi/2}" upper="${pi/2}" effort="1.0" velocity="${100*pi/180}"/>
        <xacro:y_axis/>
        <joint_properties damping="1.0" friction="1.0"/>
	</joint>

    <xacro:gazebo_wheel_params link_ref="left_wheel"/>
    <xacro:gazebo_wheel_params link_ref="right_wheel"/>
    <xacro:gazebo_castor_wheel_params link_ref="castor_wheel"/>
    <xacro:servo_params link_ref="pan_mechanism"/>
    <xacro:servo_params link_ref="tilt_mechanism"/>

    <xacro:macro name="servo_transmission_macro" params="joint servo_type">
        <transmission name="${servo_type}_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${joint}">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            </joint>
            <actuator name="${servo_type}_servo_actuator">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <xacro:servo_transmission_macro joint="pan_mechanism_joint" servo_type="pan" />
    <xacro:servo_transmission_macro joint="tilt_mechanism_joint" servo_type="tilt" />


    <link name="camera_module">
        <inertial>
            <xacro:camera_module_box_origin/>
            <mass value="${camera_module_mass}"/>
            <inertia ixx="${camera_module_ixx}" ixy="0.0" ixz="0.0" iyy="${camera_module_iyy}" iyz="0.0" izz="${camera_module_izz}"/>
        </inertial>
        <visual>
<!--            <xacro:camera_module_box_origin/>-->
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
<!--                <box size="${camera_module_width_x} ${camera_module_depth_y} ${camera_module_height_z}"/>-->
                <mesh filename="${camera_module_mesh_path}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <xacro:camera_module_box_origin/>
            <geometry>
                <box size="${camera_module_width_x} ${camera_module_depth_y} ${camera_module_height_z}"/>
            </geometry>
        </collision>
    </link>

    <joint name="camera_module_joint" type="fixed">
    	<parent link="tilt_mechanism"/>
    	<child link="camera_module"/>
    	<xacro:camera_module_joint_origin/>
	</joint>

    <link name="camera_sensor">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <material name="red"/>
        </visual>
    </link>

    <joint name="camera_sensor_joint" type="fixed">
    	<parent link="camera_module"/>
    	<child link="camera_sensor"/>
    	<xacro:camera_sensor_joint_origin/>
	</joint>

    <link name="imu_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <material name="red"/>
        </visual>
    </link>

    <joint name="ep_imu_joint" type="fixed">
    	<parent link="ep"/>
    	<child link="imu_link"/>
    	<xacro:ep_box_origin/>
	</joint>

    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>10.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
                <initialOrientationAsReference>false</initialOrientationAsReference>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>


</robot>